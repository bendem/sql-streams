package be.bendem.sqlstreams;

import be.bendem.sqlstreams.util.SqlFunction;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.stream.Stream;

public interface UpdateReturning extends ParameterProvider<UpdateReturning, PreparedStatement> {

    /**
     * Executes the query and return the amount of rows modified by this query.
     *
     * @return the amount of rows modified by this query
     * @see PreparedStatement#executeUpdate()
     */
    int count();

    /**
     * Executes the query and return the amount of rows modified by this query as a long.
     *
     * @return the amount of rows modified by this query
     * @see PreparedStatement#executeLargeUpdate()
     */
    long largeCount();

    /**
     * Returns a {@code Stream} of the values generated by this query.
     * <p>
     * Note that you should call {@link #count()} or {@link #largeCount()} before
     * calling this method, otherwise, the query has not actually been executed
     * yet.
     *
     * @param mapping a function to map the returned {@code ResultSet} to another
     *                type
     * @param <T> the type of the {@code stream} to return
     * @return the {@code Stream} of generated keys
     * @see PreparedStatement#getGeneratedKeys()
     */
    <T> Stream<T> generated(SqlFunction<ResultSet, T> mapping);
}
